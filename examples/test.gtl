
 > implying 2 beats 1
 > spit 1
 > or 1 beats 1
 > spit 2
 > or sth
 >
 > implying 2 beaten by 4 #usunięcie: If statement closed, yet was never opened. Use \'implying\' to start if"
 > spit 3
 > or 3 beats 2
 > spit 4
 > or sth #usunięcie: "If statement was never closed, use \'or sth\' to close if"
 >
 > see i is 1
 > think that 2 beats i #usunięcie: Loop statement closed, but not opened use 'think that' to start loop structure
 > i evolves
 >  reconsider #usunięcie: Loop statement was never closed, use 'reconsider' to close loop
 > see b is 4 #zmiana na iz: Expecting one of: {<EOF>, END_LIFE, 'is', NEWLINE}  We think you meant:is
 > spit b
 >
 or sth # If statement closed, yet was never opened. Use 'implying' to start if

 >  be an #usunięcie: Function statement closed, yet was never opened. Use 'be' to start new function
 > spit 5
 > profit #usunięcie: Function statement was never closed, use 'profit' to close function

 2 is b # Cannot assign to literal!
 
 > look around
 > aaa
 > see x is 4
 > lose interest
 > spit "yes"
 > see multiple xs is 1,2,3,4
 > spit xs
 > spit aaa
 > see y is 3 joined by 4 breeding like 3 times
 > see x is 56 joined by (
 >          54 breeding like
 >          3
 >          times)
 > spit 1 'th xs
 >
