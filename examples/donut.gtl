Helper functions
 > be cos
 > tasting out
 > likes tasting a
 > out is calling sin regarding 1.5707963267948966192313216916398 joined by a
 > profit

 > be sin
 > tasting out
 > likes tasting a
 > implying a beaten by 0
 > a is the literal opposite of a
 > or sth
 > a is a joined by the literal opposite of (
 >   6.283185307179586476925286766559 breeding like
 >   let me see (
 >   a breeding like flipped 6.283185307179586476925286766559 times)
 >   times)
 > implying a beaten by 0.78539816339744830961566084581988
 >   out is calling smallSin regarding a
 > or a beaten by 2.3561944901923449288469825374596
 >   out is calling smallCos regarding 1.5707963267948966192313216916398 joined by the literal opposite of a
 > or a beaten by 3.9269908169872415480783042290994
 >   out is calling smallSin regarding 3.1415926535897932384626433832795 joined by the literal opposite of a
 > or a beaten by 5.4977871437821381673096259207391
 >   out is calling smallCos regarding 4.7123889803846898576939650749193 joined by the literal opposite of a
 >   out is the literal opposite of out
 > or not
 >   out is calling smallSin regarding a joined by the literal opposite of 6.28318530717958647692528676655
 > or sth
 > profit

 > be smallSin
 > tasting out
 > likes tasting a
 > out is a joined by the literal opposite of (
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     flipped 6
 >     times times times)
 > out is joined by (
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     flipped 120
 >     times times times times times)
 > out is joined by the literal opposite of (
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     flipped 5040
 >     times times times times times times times)
 > profit

 > be smallCos
 > tasting out
 > likes tasting a
 > out is 1 joined by the literal opposite of (
 >     a breeding like
 >     a breeding like
 >     flipped 2
 >     times times)
 > out is joined by (
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     flipped 24
 >     times times times times)
 > out is joined by the literal opposite of (
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     a breeding like
 >     flipped 720
 >     times times times times times times)
 > profit

Setup of the constants
 > see k
 > see ii
 > taste A is 0
 > taste B is 0
 > taste i
 > taste j
 > taste about 1760 z
 > hear about 1760 b
 > hear about 12 chars
 > 0'th chars is "."
 > 1'th chars is ","
 > 2'th chars is "-"
 > 3'th chars is "~"
 > 4'th chars is ":"
 > 5'th chars is ";"
 > 6'th chars is "="
 > 7'th chars is "!"
 > 8'th chars is "*"
 > 9'th chars is "#"
 > 10'th chars is "$"
 > 11'th chars is "@"
 > spit "\u001b[2J"
Main loop
 > think that c:
 > ii is 0
 > think that ii beaten by 1760
 > ii 'th z is 0
 > ii 'th b is " "
 > ii evolves
 > reconsider
 > j is 0
 > think that 6.28 beaten by j
 > i is 0
 > think that 6.28 beaten by i
    > taste c is calling sin regarding i
 >
 > i is joined by 0.02
 > reconsider
 > j is joined by 0.07
 > reconsider
Printing everything at once
 > k is 0
 > hear out is "\u001b[H"
 > think that 1761 beaten by k
 > implying k whatever left from 80 beats 0
 > out is joined by k 'th b
 > or not
 > out is joined by "\n"
 > or sth
 > k evolves
 > reconsider
 > spit out
 > A is joined by 0.04
 > B is joined by 0.02
 > reconsider